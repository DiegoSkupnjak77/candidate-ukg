
// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TraineeProgram.Persistence.DBEntities
{
    public partial class TraineeProgramDBContext : DbContext
    {
        public TraineeProgramDBContext()
        {
        }

        public TraineeProgramDBContext(DbContextOptions<TraineeProgramDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<DBCandidate> Candidates { get; set; }
        public virtual DbSet<DBCandidateLink> CandidateLinks { get; set; }
        public virtual DbSet<DBCultural> Culturals { get; set; }
        public virtual DbSet<DBHr> Hrs { get; set; }
        public virtual DbSet<DBInterview> Interviews { get; set; }
        public virtual DbSet<DBInterviewType> InterviewTypes { get; set; }
        public virtual DbSet<DBJobOpening> JobOpenings { get; set; }
        public virtual DbSet<DBManager> Managers { get; set; }
        public virtual DbSet<DBOfferLetter> OfferLetters { get; set; }
        public virtual DbSet<DBTechnical> Technicals { get; set; }
        public virtual DbSet<DBUserR> UserRs { get; set; }
        public virtual DbSet<DBVp> Vps { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DBCandidate>(entity =>
            {
                entity.ToTable("Candidate");

                entity.HasIndex(e => e.Email, "ctr_Email")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CoverLetter)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("coverLetter");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("firstName");

                entity.Property(e => e.IsActive).HasColumnName("isActive");

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("lastName");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("middleName");

                entity.Property(e => e.MobilePhone)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("mobilePhone");

                entity.Property(e => e.Photo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("photo");

                entity.Property(e => e.UploadResume)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("uploadResume");

                entity.HasMany(d => d.IdJobOpenings)
                    .WithMany(p => p.IdCandidates)
                    .UsingEntity<Dictionary<string, object>>(
                        "CandidateJobOpening",
                        l => l.HasOne<DBJobOpening>().WithMany().HasForeignKey("IdJobOpening").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Candidate__idJob__17F790F9"),
                        r => r.HasOne<DBCandidate>().WithMany().HasForeignKey("IdCandidate").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Candidate__idCan__17036CC0"),
                        j =>
                        {
                            j.HasKey("IdCandidate", "IdJobOpening").HasName("PK__Candidat__5C2EF2F1CD3DDE27");

                            j.ToTable("Candidate_JobOpening");

                            j.IndexerProperty<int>("IdCandidate").HasColumnName("idCandidate");

                            j.IndexerProperty<int>("IdJobOpening").HasColumnName("idJobOpening");
                        });
            });

            modelBuilder.Entity<DBCandidateLink>(entity =>
            {
                entity.HasKey(e => new { e.IdCandidate, e.Link })
                    .HasName("PK__Candidat__E26B081EE6965412");

                entity.ToTable("Candidate_Links");

                entity.Property(e => e.IdCandidate).HasColumnName("idCandidate");

                entity.Property(e => e.Link)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("link");

                entity.HasOne(d => d.IdCandidateNavigation)
                    .WithMany(p => p.CandidateLinks)
                    .HasForeignKey(d => d.IdCandidate)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Candidate__idCan__09A971A2");
            });

            modelBuilder.Entity<DBCultural>(entity =>
            {
                entity.HasKey(e => e.IdInterview)
                    .HasName("PK__Cultural__CD1ADA004A072F91");

                entity.ToTable("Cultural");

                entity.Property(e => e.IdInterview)
                    .ValueGeneratedNever()
                    .HasColumnName("idInterview");

                entity.HasOne(d => d.IdInterviewNavigation)
                    .WithOne(p => p.Cultural)
                    .HasForeignKey<DBCultural>(d => d.IdInterview)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Cultural__idInte__7A3223E8");
            });

            modelBuilder.Entity<DBHr>(entity =>
            {
                entity.HasKey(e => e.IdInterview)
                    .HasName("PK__HR__CD1ADA004749CBDB");

                entity.ToTable("HR");

                entity.Property(e => e.IdInterview)
                    .ValueGeneratedNever()
                    .HasColumnName("idInterview");

                entity.Property(e => e.SalaryExpected).HasColumnName("salaryExpected");

                entity.HasOne(d => d.IdInterviewNavigation)
                    .WithOne(p => p.Hr)
                    .HasForeignKey<DBHr>(d => d.IdInterview)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HR__idInterview__7D0E9093");
            });

            modelBuilder.Entity<DBInterview>(entity =>
            {
                entity.ToTable("interview");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.FeedBack)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("feedBack");

                entity.Property(e => e.IdCandidate).HasColumnName("idCandidate");

                entity.Property(e => e.IdJobOpening).HasColumnName("idJobOpening");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.InterviewDate)
                    .HasColumnType("date")
                    .HasColumnName("interviewDate");

                entity.Property(e => e.InterviewName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("interviewName");

                entity.Property(e => e.IsApproved).HasColumnName("isApproved");

                entity.Property(e => e.Reason)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("reason");

                entity.HasOne(d => d.IdCandidateNavigation)
                    .WithMany(p => p.Interviews)
                    .HasForeignKey(d => d.IdCandidate)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__interview__idCan__756D6ECB");

                entity.HasOne(d => d.IdJobOpeningNavigation)
                    .WithMany(p => p.Interviews)
                    .HasForeignKey(d => d.IdJobOpening)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__interview__idJob__76619304");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.Interviews)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__interview__idUse__7755B73D");
            });

            modelBuilder.Entity<DBInterviewType>(entity =>
            {
                entity.ToTable("InterviewType");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.IType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("iType");

                entity.HasMany(d => d.IdUserRs)
                    .WithMany(p => p.IdTypes)
                    .UsingEntity<Dictionary<string, object>>(
                        "UserRInterviewType",
                        l => l.HasOne<DBUserR>().WithMany().HasForeignKey("IdUserR").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__UserR_Int__idUse__123EB7A3"),
                        r => r.HasOne<DBInterviewType>().WithMany().HasForeignKey("IdType").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__UserR_Int__idTyp__114A936A"),
                        j =>
                        {
                            j.HasKey("IdType", "IdUserR").HasName("PK__UserR_In__523844EFF1FA4A80");

                            j.ToTable("UserR_InterviewType");

                            j.IndexerProperty<int>("IdType").HasColumnName("idType");

                            j.IndexerProperty<int>("IdUserR").HasColumnName("idUserR");
                        });
            });

            modelBuilder.Entity<DBJobOpening>(entity =>
            {
                entity.ToTable("JobOpening");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Department)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("department");

                entity.Property(e => e.JobSummary)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("jobSummary");

                entity.Property(e => e.JobTitle)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("jobTitle");

                entity.Property(e => e.Link)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("link");

                entity.Property(e => e.OpenPositions).HasColumnName("openPositions");

                entity.Property(e => e.Position)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("position");
            });

            modelBuilder.Entity<DBManager>(entity =>
            {
                entity.HasKey(e => e.IdInterview)
                    .HasName("PK__Manager__CD1ADA0050DAC303");

                entity.ToTable("Manager");

                entity.Property(e => e.IdInterview)
                    .ValueGeneratedNever()
                    .HasColumnName("idInterview");

                entity.HasOne(d => d.IdInterviewNavigation)
                    .WithOne(p => p.Manager)
                    .HasForeignKey<DBManager>(d => d.IdInterview)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Manager__idInter__7FEAFD3E");
            });

            modelBuilder.Entity<DBOfferLetter>(entity =>
            {
                entity.HasKey(e => e.IdOfferLetter)
                    .HasName("PK__OfferLet__4CF257ABEE7150F6");

                entity.ToTable("OfferLetter");

                entity.Property(e => e.IdOfferLetter).HasColumnName("idOfferLetter");

                entity.Property(e => e.Contract)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("_contract");

                entity.Property(e => e.IdCandidate).HasColumnName("idCandidate");

                entity.Property(e => e.IdJobOpening).HasColumnName("idJobOpening");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.Salary).HasColumnName("salary");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("status");

                entity.HasOne(d => d.IdCandidateNavigation)
                    .WithMany(p => p.OfferLetters)
                    .HasForeignKey(d => d.IdCandidate)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OfferLett__idCan__607251E5");

                entity.HasOne(d => d.IdJobOpeningNavigation)
                    .WithMany(p => p.OfferLetters)
                    .HasForeignKey(d => d.IdJobOpening)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OfferLett__idJob__6166761E");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.OfferLetters)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__OfferLett__idUse__625A9A57");
            });

            modelBuilder.Entity<DBTechnical>(entity =>
            {
                entity.HasKey(e => e.IdInterview)
                    .HasName("PK__Technica__CD1ADA007013FA18");

                entity.ToTable("Technical");

                entity.Property(e => e.IdInterview)
                    .ValueGeneratedNever()
                    .HasColumnName("idInterview");

                entity.Property(e => e.CandidateLevel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("candidateLevel");

                entity.HasOne(d => d.IdInterviewNavigation)
                    .WithOne(p => p.Technical)
                    .HasForeignKey<DBTechnical>(d => d.IdInterview)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Technical__idInt__02C769E9");
            });

            modelBuilder.Entity<DBUserR>(entity =>
            {
                entity.ToTable("UserR");

                entity.HasIndex(e => e.Email, "ctr_uniqueEmail")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("firstName");

                entity.Property(e => e.IsActive).HasColumnName("isActive");

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("lastName");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.UserRole).HasColumnName("userRole");
            });

            modelBuilder.Entity<DBVp>(entity =>
            {
                entity.HasKey(e => e.IdInterview)
                    .HasName("PK__VP__CD1ADA00B55E495F");

                entity.ToTable("VP");

                entity.Property(e => e.IdInterview)
                    .ValueGeneratedNever()
                    .HasColumnName("idInterview");

                entity.HasOne(d => d.IdInterviewNavigation)
                    .WithOne(p => p.Vp)
                    .HasForeignKey<DBVp>(d => d.IdInterview)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__VP__idInterview__05A3D694");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}